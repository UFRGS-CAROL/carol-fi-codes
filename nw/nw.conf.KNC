[DEFAULT]

debug = False

# Name of the gdb executable, usualy is "gdb-mic" for Xeon Phi
gdbExecName = gdb-mic

# Which fault model to use, 0 -> single; 1 -> double; 2 -> random; 3 -> zeros; 4 -> least significant bits (LSB)
faultModel = 4

goldFile = /tmp/nw/gold_16384_th_228_pen_10
outputFile = /tmp/nw/out_16384_th_228_pen_10

# Command to run before the fault injection start
preExecScript = scp /tmp/flip* mic0:/tmp

# Command to run after the fault injection finishes
posExecScript = scp mic0:/tmp/carolfi*.log /tmp/;scp mic0:/tmp/nw/out_16384_th_228_pen_10 /tmp/nw/

# How many interrupt signals to send sequentially
seqSignals = 5
# How many random threads will attempt to send interrupt signals
numThreadsFI = 3

# Max time to send signal. It should be the app exec time in seconds
maxWaitTime = 40

# Commands to set the session inside GDB environment
gdbInitStrings = target extended-remote | ssh -T mic0 gdbserver --multi -;set sysroot /opt/mpss/3.7/sysroots/k1om-mpss-linux/;set sysroot /opt/mpss/3.7/sysroots/k1om-mpss-linux/;file /tmp/nw/needle;set remote exec-file /tmp/nw/needle;set args 16384 10 228 /tmp/nw/input_16384_th_228_pen_10 /tmp/nw/out_16384_th_228_pen_10

# Shell command to send SIGINT to the application being tested
signalCmd = ssh -T mic0 killall -2 needle

# Kill commands to exit all applications (GDB and the application tested)
# Need to ensure safe termination before another fault injection test
killStrs = killall -9 gdb-mic;ssh -T mic0 killall -9 needle;ssh -T mic0 killall -9 gdbserver;ssh -T mic0 killall -9 sshd

################### NW ###################
[nw-f1]

# Start and end time to try randomly inject a fault
initSignal = 0
endSignal = 5

################### NW ###################
[nw-f2]

# Start and end time to try randomly inject a fault
initSignal = 5
endSignal = 10

################### NW ###################
[nw-f3]

# Start and end time to try randomly inject a fault
initSignal = 10
endSignal = 15

################### NW ###################
[nw-f4]

# Start and end time to try randomly inject a fault
initSignal = 15
endSignal = 20

################### NW ###################
[nw-f5]

# Start and end time to try randomly inject a fault
initSignal = 20
endSignal = 25

################### NW ###################
[nw-f6]

# Start and end time to try randomly inject a fault
initSignal = 25
endSignal = 30

################### NW ###################
[nw-f7]

# Start and end time to try randomly inject a fault
initSignal = 30
endSignal = 35
