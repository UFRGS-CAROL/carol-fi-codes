[DEFAULT]

debug = False

# Name of the gdb executable, usualy is "gdb-mic" for Xeon Phi
gdbExecName = gdb

# How many interrupt signals to send sequentially
seqSignals = 5

# How many random threads will attempt to send interrupt signals
numThreadsFI = 3

# Which fault model to use, 0 -> single; 1 -> double; 2 -> random; 3 -> zeros; 4 -> least significant bits (LSB)
faultModel = 4


################### DGEMM ###################

goldFile = /home/dagoliveira/carol-fi/codes/clamr/clamr-knl-files/image00001.png
outputFile = /tmp/image00001.png

posExecScript=rm -f /tmp/graph00000.data;cd /home/dagoliveira/carol-fi/codes/clamr; ./generate_image.py
# Max time to send signal. It should be the app exec time in seconds
maxWaitTime = 30

# Commands to set the session inside GDB environment
gdbInitStrings = file /home/dagoliveira/carol-fi/codes/clamr/clamr-knl-files/clamr_openmponly;set args -n 512 -t 200 -g 200 -G data

# Shell command to send SIGINT to the application being tested
signalCmd = killall -2 clamr_openmponly

# Kill commands to exit all applications (GDB and the application tested)
# Need to ensure safe termination before another fault injection test
killStrs = killall -9 gdb;killall -9 clamr_openmponly

# Start and end time to try randomly inject a fault
initSignal = 0
endSignal = 5

[clamr-single-0-5]
initSignal = 0
endSignal = 5
faultModel = 0
[clamr-single-5-10]
initSignal = 5
endSignal = 10
faultModel = 0
[clamr-single-10-15]
initSignal = 10
endSignal = 15
faultModel = 0
[clamr-single-15-20]
initSignal = 15
endSignal = 20
faultModel = 0
[clamr-single-20-25]
initSignal = 20
endSignal = 25
faultModel = 0

[clamr-double-0-5]
initSignal = 0
endSignal = 5
faultModel = 1
[clamr-double-5-10]
initSignal = 5
endSignal = 10
faultModel = 1
[clamr-double-10-15]
initSignal = 10
endSignal = 15
faultModel = 1
[clamr-double-15-20]
initSignal = 15
endSignal = 20
faultModel = 1
[clamr-double-20-25]
initSignal = 20
endSignal = 25
faultModel = 1

[clamr-random-0-5]
initSignal = 0
endSignal = 5
faultModel = 2
[clamr-random-5-10]
initSignal = 5
endSignal = 10
faultModel = 2
[clamr-random-10-15]
initSignal = 10
endSignal = 15
faultModel = 2
[clamr-random-15-20]
initSignal = 15
endSignal = 20
faultModel = 2
[clamr-random-20-25]
initSignal = 20
endSignal = 25
faultModel = 2

[clamr-zero-0-5]
initSignal = 0
endSignal = 5
faultModel = 3
[clamr-zero-5-10]
initSignal = 5
endSignal = 10
faultModel = 3
[clamr-zero-10-15]
initSignal = 10
endSignal = 15
faultModel = 3
[clamr-zero-15-20]
initSignal = 15
endSignal = 20
faultModel = 3
[clamr-zero-20-25]
initSignal = 20
endSignal = 25
faultModel = 3

[clamr-lsb-0-5]
initSignal = 0
endSignal = 5
faultModel = 4
[clamr-lsb-5-10]
initSignal = 5
endSignal = 10
faultModel = 4
[clamr-lsb-10-15]
initSignal = 10
endSignal = 15
faultModel = 4
[clamr-lsb-15-20]
initSignal = 15
endSignal = 20
faultModel = 4
[clamr-lsb-20-25]
initSignal = 20
endSignal = 25
faultModel = 4
